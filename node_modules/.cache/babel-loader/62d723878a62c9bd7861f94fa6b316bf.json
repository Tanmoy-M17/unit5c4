{"ast":null,"code":"import _slicedToArray from\"F:/unit5/assignments/c4/exam/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var NewOrder=function NewOrder(){// Get data of only this user. store it in redux\n// GET /orders?owner_name=john will give you all order of user john\n//  on submit click create a new order, new order has status `Not Accepted`\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"new-problem\",type:\"text\",name:\"problem\",placeholder:\"Enter problem\"}),/*#__PURE__*/_jsx(\"input\",{className:\"owner-name\",type:\"text\",name:\"owner_name\",placeholder:\"yourname\",readOnly:true}),/*#__PURE__*/_jsx(\"input\",{className:\"brand\",type:\"text\",name:\"brand\",placeholder:\"Enter brand name\"}),/*#__PURE__*/_jsx(\"button\",{className:\"submit\",children:\"submit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pastOrders\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"filter\"}),data.map(function(e){return/*#__PURE__*/_jsxs(\"div\",{className:\"past-orders\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"id\",children:e.id}),\".\",\" \",/*#__PURE__*/_jsx(\"span\",{className:\"problem\",children:e.problem}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"cost\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"status\",children:[\"Status: \",e.status]}),/*#__PURE__*/_jsx(\"hr\",{})]});})]})]});};","map":{"version":3,"names":["useState","NewOrder","data","setData","map","e","id","problem","status"],"sources":["F:/unit5/assignments/c4/exam/src/components/NewOrder.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport const NewOrder = () => {\n  // Get data of only this user. store it in redux\n  // GET /orders?owner_name=john will give you all order of user john\n  //  on submit click create a new order, new order has status `Not Accepted`\n\n  const [data, setData] = useState([]);\n\n  return (\n    <div>\n      <div className=\"form\">\n        <input\n          className=\"new-problem\"\n          type=\"text\"\n          name=\"problem\"\n          placeholder=\"Enter problem\"\n        />\n        {/* This input is readonly, it's coming from redux */}\n        <input\n          className=\"owner-name\"\n          type=\"text\"\n          name=\"owner_name\"\n          placeholder=\"yourname\"\n          readOnly\n        />\n        <input\n          className=\"brand\"\n          type=\"text\"\n          name=\"brand\"\n          placeholder=\"Enter brand name\"\n        />\n        {/* Create new problem, show it in below form immediately */}\n        <button className=\"submit\">submit</button>\n      </div>\n\n      <div className=\"pastOrders\">\n        {/* this button filters the data below. */}\n        {/* it's just a toggle of redux state something like `showUnfinished`  */}\n        <button className=\"filter\">\n          {/* Text should change like:   Show {showUnfinished ? \"all\" : \"Only unfinished\"} */}\n        </button>\n\n        {/* Here create a div for every oreder, filter them before based on `showUnfinished` */}\n        {data.map((e) => {\n          return (\n            <div className=\"past-orders\">\n              <span className=\"id\">{e.id}</span>.{\" \"}\n              <span className=\"problem\">{e.problem}</span>{\" \"}\n              <span className=\"cost\">\n                {/* if status is not accepted then keep it empty otherwise show cost like $1234 */}\n              </span>\n              <p className=\"status\">Status: {e.status}</p>\n              <hr />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};"],"mappings":"kHAAA,OAASA,QAAT,KAAyB,OAAzB,C,wFAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC5B;AACA;AACA;AAEA,cAAwBD,QAAQ,CAAC,EAAD,CAAhC,wCAAOE,IAAP,eAAaC,OAAb,eAEA,mBACE,oCACE,aAAK,SAAS,CAAC,MAAf,wBACE,cACE,SAAS,CAAC,aADZ,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,SAHP,CAIE,WAAW,CAAC,eAJd,EADF,cAQE,cACE,SAAS,CAAC,YADZ,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,YAHP,CAIE,WAAW,CAAC,UAJd,CAKE,QAAQ,KALV,EARF,cAeE,cACE,SAAS,CAAC,OADZ,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,OAHP,CAIE,WAAW,CAAC,kBAJd,EAfF,cAsBE,eAAQ,SAAS,CAAC,QAAlB,oBAtBF,GADF,cA0BE,aAAK,SAAS,CAAC,YAAf,wBAGE,eAAQ,SAAS,CAAC,QAAlB,EAHF,CAQGD,IAAI,CAACE,GAAL,CAAS,SAACC,CAAD,CAAO,CACf,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,aAAM,SAAS,CAAC,IAAhB,UAAsBA,CAAC,CAACC,EAAxB,EADF,KACsC,GADtC,cAEE,aAAM,SAAS,CAAC,SAAhB,UAA2BD,CAAC,CAACE,OAA7B,EAFF,CAE+C,GAF/C,cAGE,aAAM,SAAS,CAAC,MAAhB,EAHF,cAME,WAAG,SAAS,CAAC,QAAb,sBAA+BF,CAAC,CAACG,MAAjC,GANF,cAOE,aAPF,GADF,CAWD,CAZA,CARH,GA1BF,GADF,CAmDD,CA1DM"},"metadata":{},"sourceType":"module"}