[{"F:\\unit5\\assignments\\c4\\exam\\src\\index.js":"1","F:\\unit5\\assignments\\c4\\exam\\src\\reportWebVitals.js":"2","F:\\unit5\\assignments\\c4\\exam\\src\\App.jsx":"3","F:\\unit5\\assignments\\c4\\exam\\src\\components\\Home.jsx":"4","F:\\unit5\\assignments\\c4\\exam\\src\\components\\Logout.jsx":"5","F:\\unit5\\assignments\\c4\\exam\\src\\components\\Login.jsx":"6","F:\\unit5\\assignments\\c4\\exam\\src\\components\\Orders.jsx":"7","F:\\unit5\\assignments\\c4\\exam\\src\\components\\NewOrder.jsx":"8","F:\\unit5\\assignments\\c4\\exam\\src\\components\\ProtextedRoute.jsx":"9","F:\\unit5\\assignments\\c4\\exam\\src\\Redux\\store.js":"10","F:\\unit5\\assignments\\c4\\exam\\src\\Redux\\Auth\\reducer.js":"11","F:\\unit5\\assignments\\c4\\exam\\src\\Redux\\Auth\\actions.js":"12"},{"size":751,"mtime":1651491356876,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1651491356923,"results":"15","hashOfConfig":"14"},{"size":1760,"mtime":1651491356838,"results":"16","hashOfConfig":"14"},{"size":154,"mtime":1651491356972,"results":"17","hashOfConfig":"14"},{"size":237,"mtime":1651491356996,"results":"18","hashOfConfig":"14"},{"size":1768,"mtime":1651491356984,"results":"19","hashOfConfig":"14"},{"size":2547,"mtime":1651491357038,"results":"20","hashOfConfig":"14"},{"size":1941,"mtime":1651491357008,"results":"21","hashOfConfig":"14"},{"size":335,"mtime":1651491357051,"results":"22","hashOfConfig":"14"},{"size":234,"mtime":1651491357071,"results":"23","hashOfConfig":"14"},{"size":295,"mtime":1651491357140,"results":"24","hashOfConfig":"14"},{"size":170,"mtime":1651491357125,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"142fuk7",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\unit5\\assignments\\c4\\exam\\src\\index.js",[],[],"F:\\unit5\\assignments\\c4\\exam\\src\\reportWebVitals.js",[],[],"F:\\unit5\\assignments\\c4\\exam\\src\\App.jsx",[],[],"F:\\unit5\\assignments\\c4\\exam\\src\\components\\Home.jsx",[],[],"F:\\unit5\\assignments\\c4\\exam\\src\\components\\Logout.jsx",[],[],"F:\\unit5\\assignments\\c4\\exam\\src\\components\\Login.jsx",["65"],[],"import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { login } from \"../Redux/Auth/actions\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Login = () => {\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios.get(\"http://localhost:8080/users\").then((data) => {\n      data.data.map((item) => {\n        // console.log(item);\n        if (\n          item.username === form.username &&\n          item.pass === form.password\n        ) {\n          // console.log(item);\n          dispatch(login({ login: true }));\n          console.log(item.role);\n          if (item.role === \"admin\") {\n            navigate(\"/orders\");\n          } else {\n            navigate(\"/neworder\");\n          }\n        }\n      });\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setForm({\n      ...form,\n      [name]: value,\n    });\n    console.log(form);\n  };\n\n  return (\n    <div>\n      <input\n        onChange={handleChange}\n        className=\"username\"\n        type=\"text\"\n        name=\"username\"\n        placeholder=\"Enter Username\"\n      />\n      <input\n        onChange={handleChange}\n        className=\"password\"\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Enter password\"\n      />\n      {/* On this button click make network req to find user with same username and password */}\n      {/* get his role, if role is `admin` take him to `/orders` page otherwise take him to `/neworder` */}\n      <button onClick={handleSubmit} className=\"submit\">\n        Login\n      </button>\n    </div>\n  );\n};","F:\\unit5\\assignments\\c4\\exam\\src\\components\\Orders.jsx",["66"],[],"import { useEffect, useState } from \"react\";\n\nexport const Orders = () => {\n  //  Get all data when admin logs in and populate it\n  // store it in redux\n\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    let fetched = await fetch(\"http://localhost:8080/orders\");\n    fetched = await fetched.json();\n    console.log(fetched);\n    setData([...data, fetched]);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <div>\n          <select className=\"controls\" name=\"progress\" id=\"progress\">\n            <option value=\"id\">ID</option>\n            <option value=\"status\">Status</option>\n            <option value=\"cost\">Cost</option>\n          </select>\n        </div>\n        <table className=\"orders\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Problem</th>\n              <th>Client Name</th>\n              <th>Status</th>\n              <th>Cost</th>\n              <th>Change Status</th>\n              <th>Accept</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((e) => {\n              return (\n                <tr key={e.id} className=\"orders-row\">\n                  <td className=\"id\">{e.id}</td>\n                  <td className=\"problem\">{e.problem}</td>\n                  <td className=\"owner\">{e.owner}</td>\n                  <td className=\"status\">{e.staus}</td>\n                  <td className=\"cost\">{e.cost}</td>\n                  <td className=\"change-status\">\n                    {/* Show select dropdown only if status is Not Accepted */}\n                    <select\n                      className=\"changeStatus\"\n                      name=\"changeStatus\"\n                    >\n                      <option value=\"Pending\">Pending</option>\n                      <option value=\"In Progress\">\n                        In Progress\n                      </option>\n                      <option value=\"Done\">Done</option>\n                      <option value=\"Not Accepted\">\n                        Not Accepted\n                      </option>\n                    </select>\n                  </td>\n                  <td className=\"accept\">\n                    {/* Show this button only if status is Not Accepted */}\n                    {/* on change make request to update it in db, and show changed status in table */}\n                    <button>Accept</button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};","F:\\unit5\\assignments\\c4\\exam\\src\\components\\NewOrder.jsx",["67"],[],"import { useState } from \"react\";\n\nexport const NewOrder = () => {\n  // Get data of only this user. store it in redux\n  // GET /orders?owner_name=john will give you all order of user john\n  //  on submit click create a new order, new order has status `Not Accepted`\n\n  const [data, setData] = useState([]);\n\n  return (\n    <div>\n      <div className=\"form\">\n        <input\n          className=\"new-problem\"\n          type=\"text\"\n          name=\"problem\"\n          placeholder=\"Enter problem\"\n        />\n        {/* This input is readonly, it's coming from redux */}\n        <input\n          className=\"owner-name\"\n          type=\"text\"\n          name=\"owner_name\"\n          placeholder=\"yourname\"\n          readOnly\n        />\n        <input\n          className=\"brand\"\n          type=\"text\"\n          name=\"brand\"\n          placeholder=\"Enter brand name\"\n        />\n        {/* Create new problem, show it in below form immediately */}\n        <button className=\"submit\">submit</button>\n      </div>\n\n      <div className=\"pastOrders\">\n        {/* this button filters the data below. */}\n        {/* it's just a toggle of redux state something like `showUnfinished`  */}\n        <button className=\"filter\">\n          {/* Text should change like:   Show {showUnfinished ? \"all\" : \"Only unfinished\"} */}\n        </button>\n\n        {/* Here create a div for every oreder, filter them before based on `showUnfinished` */}\n        {data.map((e) => {\n          return (\n            <div className=\"past-orders\">\n              <span className=\"id\">{e.id}</span>.{\" \"}\n              <span className=\"problem\">{e.problem}</span>{\" \"}\n              <span className=\"cost\">\n                {/* if status is not accepted then keep it empty otherwise show cost like $1234 */}\n              </span>\n              <p className=\"status\">Status: {e.status}</p>\n              <hr />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};","F:\\unit5\\assignments\\c4\\exam\\src\\components\\ProtextedRoute.jsx",[],[],"F:\\unit5\\assignments\\c4\\exam\\src\\Redux\\store.js",[],[],"F:\\unit5\\assignments\\c4\\exam\\src\\Redux\\Auth\\reducer.js",[],[],"F:\\unit5\\assignments\\c4\\exam\\src\\Redux\\Auth\\actions.js",[],[],{"ruleId":"68","severity":1,"message":"69","line":19,"column":28,"nodeType":"70","messageId":"71","endLine":19,"endColumn":30},{"ruleId":"72","severity":1,"message":"73","line":18,"column":6,"nodeType":"74","endLine":18,"endColumn":8,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":8,"column":16,"nodeType":"78","messageId":"79","endLine":8,"endColumn":23},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["80"],"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar",{"desc":"81","fix":"82"},"Update the dependencies array to be: [getData]",{"range":"83","text":"84"},[431,433],"[getData]"]